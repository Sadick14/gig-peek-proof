{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "dealId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "workDescription",
          "type": "string"
        }
      ],
      "name": "DealCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "dealId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "dealId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proofHash",
          "type": "bytes32"
        }
      ],
      "name": "ProofSubmitted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "clientDeals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contractorDeals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_workDescription",
          "type": "string"
        }
      ],
      "name": "createDeal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deals",
      "outputs": [
        {
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "workDescription",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "proofHash",
          "type": "bytes32"
        },
        {
          "internalType": "enum GigPeek.DealStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proofSubmittedAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dealId",
          "type": "uint256"
        }
      ],
      "name": "getDeal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "workDescription",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "proofHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum GigPeek.DealStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proofSubmittedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct GigPeek.Deal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_client",
          "type": "address"
        }
      ],
      "name": "getDealsByClient",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractor",
          "type": "address"
        }
      ],
      "name": "getDealsByContractor",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDeals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dealId",
          "type": "uint256"
        }
      ],
      "name": "releasePayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dealId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_proofHash",
          "type": "bytes32"
        }
      ],
      "name": "submitProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x491ef196aa6a789273c41952deb6992742771939ad2a6b97092f983aca6ab4cc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1150806",
    "logsBloom": "0x
    "blockHash": "0x6994821bf2dd82c8b300c3109b1dd707129a91ed0e88cb051c79037f0f8f7f09",
    "transactionHash": "0x491ef196aa6a789273c41952deb6992742771939ad2a6b97092f983aca6ab4cc",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1150806",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "86340e42d53973dd7b28fb1722e6759b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"workDescription\",\"type\":\"string\"}],\"name\":\"DealCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"ProofSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clientDeals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractorDeals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_workDescription\",\"type\":\"string\"}],\"name\":\"createDeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"workDescription\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum GigPeek.DealStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proofSubmittedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dealId\",\"type\":\"uint256\"}],\"name\":\"getDeal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"workDescription\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum GigPeek.DealStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proofSubmittedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct GigPeek.Deal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_client\",\"type\":\"address\"}],\"name\":\"getDealsByClient\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractor\",\"type\":\"address\"}],\"name\":\"getDealsByContractor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDeals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dealId\",\"type\":\"uint256\"}],\"name\":\"releasePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dealId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_proofHash\",\"type\":\"bytes32\"}],\"name\":\"submitProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A decentralized platform for gig economy transactions with escrow and proof-of-work verification\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"createDeal(address,string)\":{\"details\":\"Creates a new deal with escrow\",\"params\":{\"_contractor\":\"The Ethereum address of the contractor\",\"_workDescription\":\"A clear description of the work to be done\"}},\"getContractBalance()\":{\"details\":\"Returns contract balance (for testing purposes)\",\"returns\":{\"_0\":\"Contract balance in wei\"}},\"getDeal(uint256)\":{\"details\":\"Returns the full Deal struct for a given deal ID\",\"params\":{\"_dealId\":\"The deal ID to query\"},\"returns\":{\"_0\":\"The Deal struct\"}},\"getDealsByClient(address)\":{\"details\":\"Returns an array of deal IDs where the specified address is the client\",\"params\":{\"_client\":\"The client address to query\"},\"returns\":{\"_0\":\"Array of deal IDs\"}},\"getDealsByContractor(address)\":{\"details\":\"Returns an array of deal IDs where the specified address is the contractor\",\"params\":{\"_contractor\":\"The contractor address to query\"},\"returns\":{\"_0\":\"Array of deal IDs\"}},\"getTotalDeals()\":{\"details\":\"Returns the total number of deals created\",\"returns\":{\"_0\":\"Total number of deals\"}},\"releasePayment(uint256)\":{\"details\":\"Allows client to release payment to contractor\",\"params\":{\"_dealId\":\"The ID of the deal to release payment for\"}},\"submitProof(uint256,bytes32)\":{\"details\":\"Allows contractor to submit proof of work\",\"params\":{\"_dealId\":\"The ID of the deal to submit proof for\",\"_proofHash\":\"The keccak256 hash of the work preview\"}}},\"title\":\"GigPeek\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GigPeek.sol\":\"GigPeek\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/GigPeek.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title GigPeek\\n * @dev A decentralized platform for gig economy transactions with escrow and proof-of-work verification\\n */\\ncontract GigPeek is ReentrancyGuard {\\n    \\n    enum DealStatus {\\n        Active,         // 0 - Deal created, funds escrowed\\n        ProofSubmitted, // 1 - Contractor has submitted proof\\n        Completed       // 2 - Client has released funds\\n    }\\n    \\n    struct Deal {\\n        address client;\\n        address contractor;\\n        uint256 amount;\\n        string workDescription;\\n        bytes32 proofHash;          // keccak256 hash of the work preview\\n        DealStatus status;\\n        uint256 createdAt;\\n        uint256 proofSubmittedAt;\\n    }\\n    \\n    // State Variables\\n    Deal[] public deals;\\n    mapping(address => uint256[]) public clientDeals;\\n    mapping(address => uint256[]) public contractorDeals;\\n    \\n    // Events\\n    event DealCreated(\\n        uint256 indexed dealId,\\n        address indexed client,\\n        address indexed contractor,\\n        uint256 amount,\\n        string workDescription\\n    );\\n    \\n    event ProofSubmitted(\\n        uint256 indexed dealId,\\n        address indexed contractor,\\n        bytes32 proofHash\\n    );\\n    \\n    event PaymentReleased(\\n        uint256 indexed dealId,\\n        address indexed contractor,\\n        uint256 amount\\n    );\\n    \\n    // Modifiers\\n    modifier dealExists(uint256 _dealId) {\\n        require(_dealId < deals.length, \\\"Deal does not exist\\\");\\n        _;\\n    }\\n    \\n    modifier onlyClient(uint256 _dealId) {\\n        require(msg.sender == deals[_dealId].client, \\\"Only client can perform this action\\\");\\n        _;\\n    }\\n    \\n    modifier onlyContractor(uint256 _dealId) {\\n        require(msg.sender == deals[_dealId].contractor, \\\"Only contractor can perform this action\\\");\\n        _;\\n    }\\n    \\n    /**\\n     * @dev Creates a new deal with escrow\\n     * @param _contractor The Ethereum address of the contractor\\n     * @param _workDescription A clear description of the work to be done\\n     */\\n    function createDeal(\\n        address _contractor,\\n        string calldata _workDescription\\n    ) external payable {\\n        require(msg.value > 0, \\\"Deal amount must be greater than 0\\\");\\n        require(_contractor != address(0), \\\"Invalid contractor address\\\");\\n        require(_contractor != msg.sender, \\\"Client and contractor cannot be the same\\\");\\n        require(bytes(_workDescription).length > 0, \\\"Work description cannot be empty\\\");\\n        \\n        uint256 dealId = deals.length;\\n        \\n        Deal memory newDeal = Deal({\\n            client: msg.sender,\\n            contractor: _contractor,\\n            amount: msg.value,\\n            workDescription: _workDescription,\\n            proofHash: bytes32(0),\\n            status: DealStatus.Active,\\n            createdAt: block.timestamp,\\n            proofSubmittedAt: 0\\n        });\\n        \\n        deals.push(newDeal);\\n        clientDeals[msg.sender].push(dealId);\\n        contractorDeals[_contractor].push(dealId);\\n        \\n        emit DealCreated(dealId, msg.sender, _contractor, msg.value, _workDescription);\\n    }\\n    \\n    /**\\n     * @dev Allows contractor to submit proof of work\\n     * @param _dealId The ID of the deal to submit proof for\\n     * @param _proofHash The keccak256 hash of the work preview\\n     */\\n    function submitProof(\\n        uint256 _dealId,\\n        bytes32 _proofHash\\n    ) external dealExists(_dealId) onlyContractor(_dealId) {\\n        require(deals[_dealId].status == DealStatus.Active, \\\"Deal is not active\\\");\\n        require(_proofHash != bytes32(0), \\\"Proof hash cannot be empty\\\");\\n        \\n        deals[_dealId].proofHash = _proofHash;\\n        deals[_dealId].status = DealStatus.ProofSubmitted;\\n        deals[_dealId].proofSubmittedAt = block.timestamp;\\n        \\n        emit ProofSubmitted(_dealId, msg.sender, _proofHash);\\n    }\\n    \\n    /**\\n     * @dev Allows client to release payment to contractor\\n     * @param _dealId The ID of the deal to release payment for\\n     */\\n    function releasePayment(\\n        uint256 _dealId\\n    ) external dealExists(_dealId) onlyClient(_dealId) nonReentrant {\\n        require(deals[_dealId].status == DealStatus.ProofSubmitted, \\\"Proof not submitted yet\\\");\\n        \\n        Deal storage deal = deals[_dealId];\\n        deal.status = DealStatus.Completed;\\n        \\n        uint256 amount = deal.amount;\\n        address contractor = deal.contractor;\\n        \\n        // Transfer ETH to contractor\\n        (bool success, ) = contractor.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Payment transfer failed\\\");\\n        \\n        emit PaymentReleased(_dealId, contractor, amount);\\n    }\\n    \\n    // View Functions\\n    \\n    /**\\n     * @dev Returns an array of deal IDs where the specified address is the client\\n     * @param _client The client address to query\\n     * @return Array of deal IDs\\n     */\\n    function getDealsByClient(address _client) external view returns (uint256[] memory) {\\n        return clientDeals[_client];\\n    }\\n    \\n    /**\\n     * @dev Returns an array of deal IDs where the specified address is the contractor\\n     * @param _contractor The contractor address to query\\n     * @return Array of deal IDs\\n     */\\n    function getDealsByContractor(address _contractor) external view returns (uint256[] memory) {\\n        return contractorDeals[_contractor];\\n    }\\n    \\n    /**\\n     * @dev Returns the full Deal struct for a given deal ID\\n     * @param _dealId The deal ID to query\\n     * @return The Deal struct\\n     */\\n    function getDeal(uint256 _dealId) external view dealExists(_dealId) returns (Deal memory) {\\n        return deals[_dealId];\\n    }\\n    \\n    /**\\n     * @dev Returns the total number of deals created\\n     * @return Total number of deals\\n     */\\n    function getTotalDeals() external view returns (uint256) {\\n        return deals.length;\\n    }\\n    \\n    /**\\n     * @dev Returns contract balance (for testing purposes)\\n     * @return Contract balance in wei\\n     */\\n    function getContractBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0xf94e21b25e2f2316858cf9684cf916ae9bce933e2b46e61e3177bd351361d1f5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80637e592162116100645780637e5921621461014557806382fd5bac1461016557806388685cd91461019257806395a53f6b146101b2578063bdf5e57c146101d2578063d374493c146101ff57600080fd5b806303988f84146100a15780632f19c56a146100de5780635379719b146101005780636452bf481461011f5780636f9fb98a14610132575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610e9f565b61021f565b6040516100d5989796959493929190610f36565b60405180910390f35b3480156100ea57600080fd5b506100fe6100f9366004610f96565b610310565b005b34801561010c57600080fd5b506001545b6040519081526020016100d5565b6100fe61012d366004610fd4565b610579565b34801561013e57600080fd5b5047610111565b34801561015157600080fd5b50610111610160366004611057565b610926565b34801561017157600080fd5b50610185610180366004610e9f565b610957565b6040516100d59190611081565b34801561019e57600080fd5b506100fe6101ad366004610e9f565b610b0b565b3480156101be57600080fd5b506101116101cd366004611057565b610d83565b3480156101de57600080fd5b506101f26101ed366004611107565b610d9f565b6040516100d59190611129565b34801561020b57600080fd5b506101f261021a366004611107565b610e0b565b6001818154811061022f57600080fd5b600091825260209091206008909102018054600182015460028301546003840180546001600160a01b0394851696509290931693909290916102709061116d565b80601f016020809104026020016040519081016040528092919081815260200182805461029c9061116d565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b505050506004830154600584015460068501546007909501549394919360ff909116925088565b6001548290811061033c5760405162461bcd60e51b8152600401610333906111a1565b60405180910390fd5b8260018181548110610350576103506111ce565b60009182526020909120600890910201600101546001600160a01b031633146103cb5760405162461bcd60e51b815260206004820152602760248201527f4f6e6c7920636f6e74726163746f722063616e20706572666f726d20746869736044820152661030b1ba34b7b760c91b6064820152608401610333565b6000600185815481106103e0576103e06111ce565b600091825260209091206005600890920201015460ff16600281111561040857610408610efe565b1461044a5760405162461bcd60e51b81526020600482015260126024820152714465616c206973206e6f742061637469766560701b6044820152606401610333565b826104975760405162461bcd60e51b815260206004820152601a60248201527f50726f6f6620686173682063616e6e6f7420626520656d7074790000000000006044820152606401610333565b82600185815481106104ab576104ab6111ce565b90600052602060002090600802016004018190555060018085815481106104d4576104d46111ce565b60009182526020909120600560089092020101805460ff1916600183600281111561050157610501610efe565b0217905550426001858154811061051a5761051a6111ce565b906000526020600020906008020160070181905550336001600160a01b0316847f1b342a038b7b5216cac7fae93c8c307d40f00a20830c9bace4a20972f98815438560405161056b91815260200190565b60405180910390a350505050565b600034116105d45760405162461bcd60e51b815260206004820152602260248201527f4465616c20616d6f756e74206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610333565b6001600160a01b03831661062a5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420636f6e74726163746f7220616464726573730000000000006044820152606401610333565b336001600160a01b038416036106935760405162461bcd60e51b815260206004820152602860248201527f436c69656e7420616e6420636f6e74726163746f722063616e6e6f74206265206044820152677468652073616d6560c01b6064820152608401610333565b806106e05760405162461bcd60e51b815260206004820181905260248201527f576f726b206465736372697074696f6e2063616e6e6f7420626520656d7074796044820152606401610333565b60015460408051610100810182523381526001600160a01b03861660208083019190915234828401528251601f860182900482028101820190935284835260009260608301918790879081908401838280828437600092018290525093855250505060208083018290526040808401839052426060808601919091526080909401839052600180548082018255935284517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600890940293840180546001600160a01b03199081166001600160a01b03938416178255938701517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7860180549095169216919091179092558401517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88301559183015192935083927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf99091019061084a9082611248565b506080820151600482015560a082015160058201805460ff1916600183600281111561087857610878610efe565b021790555060c0820151600682015560e090910151600790910155336000818152600260209081526040808320805460018181018355918552838520018790556001600160a01b038a168085526003845282852080549283018155855292909320909201859055905190919084907faa05bc5afd14a3f664cfadd9eab8cb8e0d58b0f94fe2dc6681819f88c052e863906109179034908a908a90611308565b60405180910390a45050505050565b6002602052816000526040600020818154811061094257600080fd5b90600052602060002001600091509150505481565b61099e6040805161010081018252600080825260208201819052918101829052606080820152608081018290529060a0820190815260200160008152602001600081525090565b600154829081106109c15760405162461bcd60e51b8152600401610333906111a1565b600183815481106109d4576109d46111ce565b60009182526020918290206040805161010081018252600890930290910180546001600160a01b03908116845260018201541693830193909352600283015490820152600382018054919291606084019190610a2f9061116d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b9061116d565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b505050918352505060048201546020820152600582015460409091019060ff166002811115610ad957610ad9610efe565b6002811115610aea57610aea610efe565b81526020016006820154815260200160078201548152505091505b50919050565b60015481908110610b2e5760405162461bcd60e51b8152600401610333906111a1565b8160018181548110610b4257610b426111ce565b60009182526020909120600890910201546001600160a01b03163314610bb65760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920636c69656e742063616e20706572666f726d20746869732061637460448201526234b7b760e91b6064820152608401610333565b610bbe610e75565b6001808481548110610bd257610bd26111ce565b600091825260209091206005600890920201015460ff166002811115610bfa57610bfa610efe565b14610c475760405162461bcd60e51b815260206004820152601760248201527f50726f6f66206e6f74207375626d6974746564207965740000000000000000006044820152606401610333565b600060018481548110610c5c57610c5c6111ce565b6000918252602082206005600890920201908101805460ff19166002908117909155810154600182015460405192945090926001600160a01b0390911691829084908381818185875af1925050503d8060008114610cd6576040519150601f19603f3d011682016040523d82523d6000602084013e610cdb565b606091505b5050905080610d2c5760405162461bcd60e51b815260206004820152601760248201527f5061796d656e74207472616e73666572206661696c65640000000000000000006044820152606401610333565b816001600160a01b0316877f21d71db5be59bb9fa133895586b7404307dd33fb93b16db09dc6f1d9d7d231b085604051610d6891815260200190565b60405180910390a350505050610d7e6001600055565b505050565b6003602052816000526040600020818154811061094257600080fd5b6001600160a01b038116600090815260026020908152604091829020805483518184028101840190945280845260609392830182828015610dff57602002820191906000526020600020905b815481526020019060010190808311610deb575b50505050509050919050565b6001600160a01b038116600090815260036020908152604091829020805483518184028101840190945280845260609392830182828015610dff5760200282019190600052602060002090815481526020019060010190808311610deb5750505050509050919050565b600260005403610e9857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600060208284031215610eb157600080fd5b5035919050565b6000815180845260005b81811015610ede57602081850181015186830182015201610ec2565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60038110610f3257634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038981168252881660208201526040810187905261010060608201819052600090610f6a83820189610eb8565b915050856080830152610f8060a0830186610f14565b60c082019390935260e001529695505050505050565b60008060408385031215610fa957600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610fcf57600080fd5b919050565b600080600060408486031215610fe957600080fd5b610ff284610fb8565b9250602084013567ffffffffffffffff8082111561100f57600080fd5b818601915086601f83011261102357600080fd5b81358181111561103257600080fd5b87602082850101111561104457600080fd5b6020830194508093505050509250925092565b6000806040838503121561106a57600080fd5b61107383610fb8565b946020939093013593505050565b60208152600060018060a01b03808451166020840152806020850151166040840152506040830151606083015260608301516101008060808501526110ca610120850183610eb8565b9150608085015160a085015260a08501516110e860c0860182610f14565b5060c085015160e085015260e085015181850152508091505092915050565b60006020828403121561111957600080fd5b61112282610fb8565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561116157835183529284019291840191600101611145565b50909695505050505050565b600181811c9082168061118157607f821691505b602082108103610b0557634e487b7160e01b600052602260045260246000fd5b6020808252601390820152721119585b08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610d7e57600081815260208120601f850160051c810160208610156112215750805b601f850160051c820191505b818110156112405782815560010161122d565b505050505050565b815167ffffffffffffffff811115611262576112626111e4565b61127681611270845461116d565b846111fa565b602080601f8311600181146112ab57600084156112935750858301515b600019600386901b1c1916600185901b178555611240565b600085815260208120601f198616915b828110156112da578886015182559484019460019091019084016112bb565b50858210156112f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea2646970667358221220dea666189ce848f284d49e776912ec01355237af492ec8b4729cfe4ea1ae62f064736f6c63430008140033",
  "devdoc": {
    "details": "A decentralized platform for gig economy transactions with escrow and proof-of-work verification",
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "createDeal(address,string)": {
        "details": "Creates a new deal with escrow",
        "params": {
          "_contractor": "The Ethereum address of the contractor",
          "_workDescription": "A clear description of the work to be done"
        }
      },
      "getContractBalance()": {
        "details": "Returns contract balance (for testing purposes)",
        "returns": {
          "_0": "Contract balance in wei"
        }
      },
      "getDeal(uint256)": {
        "details": "Returns the full Deal struct for a given deal ID",
        "params": {
          "_dealId": "The deal ID to query"
        },
        "returns": {
          "_0": "The Deal struct"
        }
      },
      "getDealsByClient(address)": {
        "details": "Returns an array of deal IDs where the specified address is the client",
        "params": {
          "_client": "The client address to query"
        },
        "returns": {
          "_0": "Array of deal IDs"
        }
      },
      "getDealsByContractor(address)": {
        "details": "Returns an array of deal IDs where the specified address is the contractor",
        "params": {
          "_contractor": "The contractor address to query"
        },
        "returns": {
          "_0": "Array of deal IDs"
        }
      },
      "getTotalDeals()": {
        "details": "Returns the total number of deals created",
        "returns": {
          "_0": "Total number of deals"
        }
      },
      "releasePayment(uint256)": {
        "details": "Allows client to release payment to contractor",
        "params": {
          "_dealId": "The ID of the deal to release payment for"
        }
      },
      "submitProof(uint256,bytes32)": {
        "details": "Allows contractor to submit proof of work",
        "params": {
          "_dealId": "The ID of the deal to submit proof for",
          "_proofHash": "The keccak256 hash of the work preview"
        }
      }
    },
    "title": "GigPeek",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/GigPeek.sol:GigPeek",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 100,
        "contract": "contracts/GigPeek.sol:GigPeek",
        "label": "deals",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Deal)96_storage)dyn_storage"
      },
      {
        "astId": 105,
        "contract": "contracts/GigPeek.sol:GigPeek",
        "label": "clientDeals",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 110,
        "contract": "contracts/GigPeek.sol:GigPeek",
        "label": "contractorDeals",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Deal)96_storage)dyn_storage": {
        "base": "t_struct(Deal)96_storage",
        "encoding": "dynamic_array",
        "label": "struct GigPeek.Deal[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(DealStatus)78": {
        "encoding": "inplace",
        "label": "enum GigPeek.DealStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Deal)96_storage": {
        "encoding": "inplace",
        "label": "struct GigPeek.Deal",
        "members": [
          {
            "astId": 80,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "client",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 82,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "contractor",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 84,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "workDescription",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 88,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "proofHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 91,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "status",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(DealStatus)78"
          },
          {
            "astId": 93,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "createdAt",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 95,
            "contract": "contracts/GigPeek.sol:GigPeek",
            "label": "proofSubmittedAt",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}